[tool:pytest]
# Pytest configuration following TESTING_STANDARDS.md

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution settings
minversion = 6.0
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --maxfail=10
    --asyncio-mode=auto

# Async configuration
asyncio_default_fixture_loop_scope = function

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated) - <1 second each
    integration: Integration tests (medium speed) - <10 seconds each  
    performance: Performance/benchmark tests (slow) - <60 seconds each
    e2e: End-to-end tests (very slow) - complete workflows
    slow: Tests that take >5 seconds
    external: Tests requiring external services
    scraping: Web scraping tests
    database: Database-related tests
    ai: AI/ML model tests
    real_world: Tests using real external services

# Filter warnings to reduce noise
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PytestDeprecationWarning
    ignore::pytest.PytestCollectionWarning

# Log configuration  
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection optimization
collect_ignore = 
    setup.py
    __pycache__
    .venv
    venv  
    env
    build
    dist
    archive
    cache
    logs
    temp
    profiles

# Environment for tests
env =
    TESTING=true
    AUTO_JOB_TEST_MODE=true
    PYTHONPATH=src